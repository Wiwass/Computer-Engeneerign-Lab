1D/2B/3-9 risposte scritte/10B/11C/12-16B/17-20C


Questions
1. Which statement is used to stop a loop?  D
a) void
b) stop
c) exit
d) break


2. Which of the following is not a valid C variable name?  B
a) int number;
b) int $main;
c) float rate;
d) int variable_count;


3. What is the difference between malloc() and calloc()? 

malloc allocates a portion of memory to the program, calloc does the same but formats the cells in order for them to contain 1.


4. Declare a pointer called pfnc which points to a function that returns a pointer to a structure of type nameAddr.

struct nameAddr* pfnc;


5. What does the following fragment do?  
while((d=c=getch())!=EOF&&(c!='\t'||c!=' '||c!='\b')) *buff++ = c; 

it reads a file until it reaches the end \t or \b and writes all in a buffer


6. From the logic point of view, what is the difference between the fragment:
if (next < max)
    next++;
else
    next = 0;
and the fragment:
next += (next < max)? (1):(-next);

they do exactly the same thing


7. How can you check whether a linked list is circular? Describe the algorithm to be used.
i create a pointer to the head called target, i iterate through all the list until the current pointer is the same as target or i reach a node that has the next parameter set to null.
if i find target the list is circular 
if not it is not circular


8. Add two numbers stored in the variables x and y without using the addition operator (+)
sum = 


9. How can you check whether the number stored in the variable x is even or odd, without using any arithmetic or relational operators?

you can check if the least significant bit of the binary rappresentation of x is 1 or 0
1:odd
0:even


10. Which of the following is true for variable names in C?  B
a) They can contain alphanumeric characters as well as special characters
b) It is not an error to declare a variable to be one of the keywords(like goto, static)
c) Variable names cannot start with a digit
d) Variable can be of any length


11. What is the sizeof(char) in a 32-bit C compiler?  C
a) 1 bit
b) 2 bits
c) 1 Byte
d) 2 Bytes


12. What will be the output of the following C code?  B
#include  <stdio.h>
int main()
{
    signed char chr;
    chr = 128;
    printf("%d\n", chr);
    return 0;
}
a) 128
b) -128
c) Depends on the compiler
d) None of the mentioned


13. What is the code below trying to print?  B

void print(tree *root,tree *node)
{
  if(root ==null) return 0
  if(root-->left==node || root-->right==node) || print(root->left,node)
  ||printf(root->right,node)
  {
     print(root->data)
  }
}
a) just printing all nodes
b) not a valid logic to do any task
c) printing ancestors of a node passed as argument
d) printing nodes from leaf node to a node passed as argument


14. The following numbers are inserted into an empty binary search tree in the given order: 10, 2, 16, 3, 12, 8, 20, 1. What is the height of the binary search tree (the height is the maximum distance of a leaf node from the root)?  B
a) 2
b) 3
c) 4
d) 6


15. Suppose that we have numbers between 1 and 1,000 in a binary search tree and want to search for the number 364. Which of the following sequences could not be the sequence of nodes examined ?  C
a) 925, 221, 912, 245, 899, 259, 363, 364
b) 3, 400, 388, 220, 267, 383, 382, 279, 364
c) 926, 203, 912, 241, 913, 246, 364
d) 3, 253, 402, 399, 331, 345, 398, 364


16. A binary search tree is generated by inserting in order the following integers:  B
 50, 15, 62, 5, 20, 58, 91, 3, 8, 37, 60, 24, 49, 52 
The number of nodes in the left subtree and right subtree of the root respectively is
a) (5, 8)
b) (8, 5)
c) (9, 4)
d) (4, 9)


17. Consider the following binary search tree T given below: Which node contains the fourth smallest element in T? C
                 R
                / \
               Q   V
              / \   \
             U   W   Y
                /   /
               X   Z
a) Q
b) V
c) W
d) X


18. Consider the following code snippet in C. The function print() receives root of a Binary Search Tree (BST) and a positive integer k as arguments.  C

// A BST node
struct node {
    int data;
    struct node *left, *right;
};

int count = 0;

void print(struct node *root, int k)
{
    if (root != NULL && count <= k)
    {
        print(root->left, k);
        count++;
        if (count == k)
          printf("%d ", root->data);
       print(root->right, k);
    }
}
What is the output of print(root, 4) where root represent root of the following BST.
                   15
                 /    \
                10     20
               /  \   /  \
              8   12 16   25   
a) 12
b) 10
c) 15
d) 15 20


19. What will be the output of the following C code?   C
#include<stdio.h>
enum hello
{
    a,b=99,c,d=-1
};
main()
{
    enum hello m;
    printf("%d\n%d\n%d\n%d\n",a,b,c,d);
}
a)
    1
    99
    100
    -1
b) Error
c)
    0
    99
    100
    -1
d)
    0
    1
    2
    3


20. What will be the output of the following C code? (Assuming size of char = 1, int = 4, double = 8)   C
    #include <stdio.h>
    union utemp
    {
        int a;
        double b;
        char c;
    }u;
    int main()
    {
        u.c = 'A';
        u.a = 1;
        printf("%d", sizeof(u));
    }
a) 1
b) 4
c) 8
d) 13

